Code Smell identificados en la clase Cuenta:

1) Primitive Obsession (double / boolean)

2) Long Parameter List ( el metodo agregarMovimiento de la clase Cuenta facilmente podria recibir un objeto
    "movimiento", no tiene la necesidad de conocer todos los atributos de un movimiento y crearlo al momento de agregar.

3) Message Chains y Long Method - en el metodo getMontoExtraidoA de la clase cuenta se podria descomponer. Teniendo un metodo aparte donde
se pueda filtrar los movimientos segun la fecha.

4) Duplicated Code (en metodos Sacar y Poner se debe validar que el monto sea un valor positivo)

5) Long Method tambien en los metodos Sacar y Poner porque la logica de las validaciones "ensucian" el objetivo de cada metodo.
Se podria delegar las validaciones en otro/s metodo/s.


---------------------------------------------------------

Code Smell identificados en la clase Movimiento:

1) Primitive Obsession (double / boolean)

2) Type Test - Missing Polymorphism (en varias oportunidades la clase Movimiento
 debe consultar si es un deposito o si es una extraccion, a Ã©l mismo).
 Cuenta tambien consulta si un movimiento es un deposito o una extraccion

3)  Divergent Change (Movimiento podria separarse y mediante el refactor "Extract class" separarlos dos clases: Extraccion y Deposito).
    Se podrian crear metodos polimorficos y no tener estar preguntando si es un deposito/extraccion por cada accion que se realice
    en la clase movimiento.
